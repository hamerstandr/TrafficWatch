<Window x:Class="TrafficWatch.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:TrafficWatch"
        mc:Ignorable="d"
        Foreground="{DynamicResource WindowForeground}"
        Background="{DynamicResource WindowBackground}"
        Title="MainWindow" Height="450" Width="800" AllowsTransparency="True" WindowStyle="None">
    <Window.Resources>
        <SolidColorBrush x:Key="WindowForeground"
                         Color="Black" />
        <SolidColorBrush x:Key="WindowBackground"
                         Color="White" />
        <SolidColorBrush x:Key="CottonSwabSliderTrackBackground"
                         Color="#39FFFFFF" />
        <SolidColorBrush x:Key="CottonSwabSliderThumb"
                         Color="#FF339933" />
        <SolidColorBrush x:Key="HeaderBackground"
                         Color="#FFFFFFFF" />
        <SolidColorBrush x:Key="CottonSwabSliderThumbHover"
                         Color="Red" />
        <SolidColorBrush x:Key="CottonSwabSliderThumbPressed"
                         Color="Yellow" />
        <SolidColorBrush x:Key="CottonSwabSliderTrackFill"
                         Color="#FF339933" />


        <Style x:Key="SliderButtonStyle"
               TargetType="{x:Type RepeatButton}">
            <Setter Property="OverridesDefaultStyle"
                    Value="true" />
            <Setter Property="IsTabStop"
                    Value="false" />
            <Setter Property="Focusable"
                    Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border Background="Transparent">
                            <Border Background="{TemplateBinding Foreground}"
                                    Height="2">
                            </Border>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="SliderThumbStyle"
               TargetType="{x:Type Thumb}">
            <Setter Property="OverridesDefaultStyle"
                    Value="true" />
            <Setter Property="Height"
                    Value="24" />
            <Setter Property="Width"
                    Value="8" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border Name="Thumb"
                                Background="{TemplateBinding Foreground}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="0"
                                CornerRadius="5">
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="ButtonCloseTemplate" TargetType="{x:Type Button}">
            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsDefaulted" Value="True">
                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" TargetName="border" Value="#FFFF1D1D"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FFFF1D1D"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" TargetName="border" Value="#FFFF0202"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FFFF0202"/>
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked" Value="True">
                    <Setter Property="Background" TargetName="border" Value="#FFBCDDEE"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FF245A83"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" TargetName="border" Value="#FFF4F4F4"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FFADB2B5"/>
                    <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="#FF838383"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="ButtonMaxMinTemplate" TargetType="{x:Type Button}">
            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsDefaulted" Value="True">
                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" TargetName="border" Value="#FF067AEE"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FF067AEE"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" TargetName="border" Value="#FF067AEE"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FF067AEE"/>
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked" Value="True">
                    <Setter Property="Background" TargetName="border" Value="#FFBCDDEE"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FF245A83"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" TargetName="border" Value="#FFF4F4F4"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FFADB2B5"/>
                    <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="#FF838383"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
    </Window.Resources>
    <Grid>
        <StackPanel Orientation="Horizontal" Height="25" HorizontalAlignment="Right"  VerticalAlignment="Top" Background="#CC515050">
            <Button x:Name="ButtonMinimized" Width="45" Height="25" Content="-" FontSize="18" Foreground="#FFFFFBFB" Background="#02000000" Template="{DynamicResource ButtonMaxMinTemplate}" BorderBrush="{x:Null}" Click="ButtonMinimized_Click"/>
            <Button x:Name="ButtonMaximized" Width="45" Height="25" Content="¨" FontSize="14" FontFamily="Wingdings" Background="#02000000" Foreground="White" Template="{DynamicResource ButtonMaxMinTemplate}" BorderBrush="{x:Null}" Click="ButtonMaximized_Click" />
            <Button x:Name="ButtonClose" Width="55" ToolTip="Close" Height="25" Content="X" Background="#02000000" Foreground="White" FontSize="18" Click="ButtonClose_Click" BorderBrush="{x:Null}" Template="{DynamicResource ButtonCloseTemplate}"/>
        </StackPanel>
    </Grid>
</Window>
