<Window x:Class="TrafficWatch.View.DetailWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:system="clr-namespace:System;assembly=mscorlib"
        mc:Ignorable="d"
        WindowChrome.WindowChrome="{DynamicResource WindowChromeKey}"
        ShowInTaskbar="False"
        Closing="Window_Closing"
        WindowStyle="None"
        ResizeMode="CanResize"
        Topmost="True"
        Loaded="Window_Loaded"
        MouseEnter="Window_MouseEnter"
        MouseLeave="Window_MouseLeave"
        MouseMove="Window_MouseMove"
        Height="290" Width="290" Background="#F9808080" AllowsTransparency="True" Foreground="White">

    <Window.Resources>
        <WindowChrome x:Key="WindowChromeKey">
            <WindowChrome.CaptionHeight>0</WindowChrome.CaptionHeight>
            <WindowChrome.ResizeBorderThickness>
                <Thickness>0</Thickness>
            </WindowChrome.ResizeBorderThickness>
        </WindowChrome>
        <Style x:Key="SwitchTypeToggleButton"
           TargetType="{x:Type ToggleButton}">

            <Style.Resources>
                <Color x:Key="Color.Additional.LightGrey">#989EA8</Color>
                <Color x:Key="Color.Additional.MediumGrey">#61656B</Color>
                <Color x:Key="Color.MedtronicBranding.MedtronicBlue">#004B87</Color>
                <Color x:Key="Color.MedtronicBranding.CobaltBlue">#0085CA</Color>

                <SolidColorBrush x:Key="ToggleButtonFalseBackground"
                             Color="{StaticResource Color.Additional.LightGrey}" />
                <SolidColorBrush x:Key="ToggleButtonTrueBackground"
                             Color="{StaticResource Color.MedtronicBranding.CobaltBlue}" />
                <SolidColorBrush x:Key="ToggleButtonFalseForeground"
                             Color="{StaticResource Color.Additional.MediumGrey}" />
                <SolidColorBrush x:Key="ToggleButtonTrueForeground"
                             Color="{StaticResource Color.MedtronicBranding.MedtronicBlue}" />
                <Style x:Key="OnContentControl"
                   TargetType="ContentControl">
                    <Setter Property="HorizontalAlignment" Value="Center" />
                    <Setter Property="HorizontalContentAlignment" Value="Center" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <TextBlock FontFamily="Wingdings 2"
                                       FontSize="16"
                                       FontWeight="Bold"
                                       Foreground="White"
                                       Text="P" Margin="1,1,0,1"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="VerticalAlignment" Value="Center" />
                    <Setter Property="VerticalContentAlignment" Value="Center" />
                </Style>
                <Style x:Key="OffContentControl"
                   TargetType="ContentControl">
                    <Setter Property="HorizontalAlignment" Value="Center" />
                    <Setter Property="HorizontalContentAlignment" Value="Center" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <TextBlock FontSize="16"
                                       Foreground="White"
                                       Text="X" Margin="0,-1,1,1" />
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="VerticalAlignment" Value="Center" />
                    <Setter Property="VerticalContentAlignment" Value="Center" />
                </Style>

            </Style.Resources>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Grid x:Name="MainRow">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="{Binding ElementName=TopRow, Path=ActualHeight}" />
                                    <ColumnDefinition />
                                    <ColumnDefinition Width="{Binding ElementName=TopRow, Path=ActualHeight}" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition x:Name="TopRow" />
                                    <RowDefinition />
                                </Grid.RowDefinitions>

                                <Ellipse x:Name="BackgroundEllipse1"
                                     Grid.RowSpan="2"
                                     Grid.Column="0"
                                     Grid.ColumnSpan="3"
                                     Width="{Binding ElementName=MainRow,
                                                     Path=ActualHeight}"
                                     Height="{Binding ElementName=MainRow,
                                                      Path=ActualHeight}"
                                     HorizontalAlignment="Left"
                                     Fill="{StaticResource ToggleButtonTrueBackground}" />
                                <Ellipse x:Name="BackgroundEllipse2"
                                     Grid.Row="0"
                                     Grid.RowSpan="2"
                                     Grid.Column="0"
                                     Grid.ColumnSpan="3"
                                     Width="{Binding ElementName=MainRow,
                                                     Path=ActualHeight}"
                                     Height="{Binding ElementName=MainRow,
                                                      Path=ActualHeight}"
                                     HorizontalAlignment="Right"
                                     Fill="{StaticResource ToggleButtonFalseBackground}" />
                                <Border x:Name="BackgroundBorder"
                                    Grid.Row="0"
                                    Grid.RowSpan="2"
                                    Grid.Column="1"
                                    Background="{StaticResource ToggleButtonTrueBackground}" />
                            </Grid>
                            <Grid HorizontalAlignment="Stretch">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition x:Name="AnimationWidth" />
                                    <ColumnDefinition Width="{Binding ElementName=MainRow, Path=ActualHeight}" />
                                </Grid.ColumnDefinitions>
                                <Border x:Name="AnimationSizeBorder"
                                    Grid.Column="0" />
                                <ContentControl Grid.Column="0"
                                            Style="{StaticResource OnContentControl}" />
                            </Grid>
                            <Grid HorizontalAlignment="Stretch">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="{Binding ElementName=MainRow, Path=ActualHeight}" />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>

                                <ContentControl Grid.Column="1"
                                            Style="{StaticResource OffContentControl}" />
                            </Grid>
                            <Grid Background="Transparent">
                                <StackPanel HorizontalAlignment="Left"
                                        Orientation="Horizontal">
                                    <Border Width="{Binding ElementName=AnimationSizeBorder, Path=ActualWidth}" />
                                    <Ellipse x:Name="ForegroundEllipse"
                                         Width="{Binding ElementName=MainRow,
                                                         Path=ActualHeight}"
                                         Height="{Binding ElementName=MainRow,
                                                          Path=ActualHeight}"
                                         HorizontalAlignment="Right"
                                         Fill="{StaticResource ToggleButtonTrueForeground}" />
                                </StackPanel>
                            </Grid>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="False">
                                <Setter TargetName="BackgroundBorder" Property="Background" Value="{StaticResource ToggleButtonFalseBackground}" />
                                <Setter TargetName="ForegroundEllipse" Property="Fill" Value="{StaticResource ToggleButtonFalseForeground}" />
                                <!--<Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="AnimationSizeBorder"  Storyboard.TargetProperty="(Border.Width)" To="0" Duration="0:0:3"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>

                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="AnimationSizeBorder"  Storyboard.TargetProperty="(Border.Width)" From="0" Duration="0:0:3"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>-->
                                <Setter TargetName="AnimationSizeBorder" Property="Width" Value="0" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="ButtonCloseTemplate" TargetType="{x:Type Button}">
            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsDefaulted" Value="True">
                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" TargetName="border" Value="#FFFF1D1D"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FFFF1D1D"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" TargetName="border" Value="#FFFF0202"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FFFF0202"/>
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked" Value="True">
                    <Setter Property="Background" TargetName="border" Value="#FFBCDDEE"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FF245A83"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" TargetName="border" Value="#FFF4F4F4"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FFADB2B5"/>
                    <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="#FF838383"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style TargetType="TextBox">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="#FFB8B8B8"/>
                            </Trigger>
                            <Trigger Property="IsFocused" Value="true">
                                <Setter Property="BorderThickness" Value="1"></Setter>
                                <Setter Property="BorderBrush" TargetName="border" Value="#FFB3BCBF"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>


    <Grid Background="Transparent" >
        <Grid.RowDefinitions>
            <RowDefinition Height="25"/>
            <RowDefinition Height="30"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition Width="55"/>
        </Grid.ColumnDefinitions>
        <ToggleButton  x:Name="PinWindows" ToolTip="Pin" HorizontalAlignment="Right" Margin="0,2,5,0" VerticalAlignment="Top"  Click="PinWindows_Click" Style="{StaticResource SwitchTypeToggleButton}" />
        <Button Grid.Row="0" Grid.Column="1" x:Name="ButtonClose" ToolTip="Close"   Background="#02000000" Foreground="White" FontSize="18" Click="ButtonClose_Click" BorderBrush="{x:Null}" Template="{DynamicResource ButtonCloseTemplate}">
            <Viewbox >
                <Grid Width="48" Height="48" Visibility="Visible">
                    <Path Data="M0,0L8.934021,0 16,7.5419992 23.062012,0 32,0 20.468018,12.315997 31.94397,24.570001 23.013977,24.570001 16.000977,17.083998 8.9890137,24.570001 0.052001953,24.570001 11.530029,12.315997z" Stretch="Uniform" Fill="#FFFFFFFF" Width="26" Height="26" Margin="0,0,0,0" RenderTransformOrigin="0.5,0.5">
                        <Path.RenderTransform>
                            <TransformGroup>
                                <TransformGroup.Children>
                                    <RotateTransform Angle="0" />
                                    <ScaleTransform ScaleX="1" ScaleY="1" />
                                </TransformGroup.Children>
                            </TransformGroup>
                        </Path.RenderTransform>
                    </Path>
                </Grid>
            </Viewbox>
        </Button>
        <TextBox x:Name="TextSearsh" Background="Transparent" Foreground="White" Margin="10,0,93,0" Height="20" Grid.Row="1" SelectionBrush="#FFABADB3" BorderBrush="#FF949495" />
        <Grid Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="55" />
                <ColumnDefinition Width="55"/>
                <ColumnDefinition Width="5"/>
            </Grid.ColumnDefinitions>
            <Label Grid.Column="1" Content="▼" Foreground="#FFFB0303" Margin="0,5,0,0" ToolTip="Download" />
            <Label Grid.Column="2" Content="▲" Foreground="#FF3AFF00" Margin="0,6,0,0" ToolTip="Upload" />
        </Grid>

        <Grid Name="ContentGrid"
                  Grid.Row="2" Grid.Column="0"
                  Grid.ColumnSpan="2">
            <Grid.Resources>
                <Style TargetType="{x:Type RowDefinition}">
                    <Setter Property="Height" Value="20"/>
                </Style>
                <!--<Style TargetType="{x:Type SelectionMode}">
                    <Setter Property="Background" Value="Transparent"/>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#a5888888"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>-->
                <Style TargetType="{x:Type TextBlock}">
                    <Setter Property="FontSize" Value="14"/>
                    <Setter Property="Foreground" Value="White"/>
                </Style>
                <Style TargetType="Image">
                    <Setter Property="Width" Value="15"/>
                    <Setter Property="Height" Value="15"/>
                    <Setter Property="HorizontalAlignment" Value="Center"/>
                    <Setter Property="VerticalAlignment" Value="Center"/>
                    <Setter Property="Margin" Value="4, 0, 0,0 "/>
                </Style>
                <Style TargetType="Label">
                    <Setter Property="Visibility" Value="Hidden"/>
                    <Setter Property="Background"  Value="Transparent"/>
                    <Setter Property="HorizontalAlignment" Value="Center"/>
                    <Setter Property="VerticalAlignment" Value="Center"/>
                    <Setter Property="Height" Value="14"/>
                    <Setter Property="FontSize"  Value="12"/>
                    <Setter Property="Padding" Value="0"/>
                    <Setter Property="Margin" Value="2,0,0,0"/>
                    <Setter Property="Foreground" Value="#64A8E1"/> <!--#E5808080-->
                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                    <Setter Property="Content" Value="more"/>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="#1a11E0"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>

            </Grid.Resources>
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
            </Grid.RowDefinitions>

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="25"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="55"/>
                <ColumnDefinition Width="55"/>
                <ColumnDefinition Width="5"/>
            </Grid.ColumnDefinitions>
        </Grid>
        <Grid Grid.Row="3"/>
        
        <!--Style="{DynamicResource ButtonFocusVisual}"-->

    </Grid>
</Window>
