<Window x:Class="TrafficWatch.PopWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:TrafficWatch"
        mc:Ignorable="d"
        Title="TrafficWatch" Height="333.425" Width="199.823" Topmost="True"
        ShowInTaskbar="False"
        AllowsTransparency="True"
        SnapsToDevicePixels="True"
        UseLayoutRounding="True"
        WindowStyle="None"
        Deactivated="Window_Deactivated"
        PreviewKeyDown="Window_PreviewKeyDown"
        Foreground="{DynamicResource WindowForeground}"
        Background="{DynamicResource WindowBackground}"
		ResizeMode="NoResize"
        x:Name="VolumeWindow"  
        MouseEnter="G1_MouseEnter"
        MouseLeave="G1_MouseLeave"
        MouseLeftButtonDown="G1_MouseLeftButtonDown"
        MouseDown="VolumeWindow_MouseDown">
    <Window.Resources>
        <SolidColorBrush x:Key="WindowForeground"
                         Color="Black" />
        <SolidColorBrush x:Key="WindowBackground"
                         Color="White" />
        <SolidColorBrush x:Key="CottonSwabSliderTrackBackground"
                         Color="#39FFFFFF" />
        <SolidColorBrush x:Key="CottonSwabSliderThumb"
                         Color="#FF339933" />
        <SolidColorBrush x:Key="HeaderBackground"
                         Color="#FFFFFFFF" />
        <SolidColorBrush x:Key="CottonSwabSliderThumbHover"
                         Color="Red" />
        <SolidColorBrush x:Key="CottonSwabSliderThumbPressed"
                         Color="Yellow" />
        <SolidColorBrush x:Key="CottonSwabSliderTrackFill"
                         Color="#FF339933" />

        <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="20" />
                </Grid.ColumnDefinitions>
                <Border
  x:Name="Border" 
  Grid.ColumnSpan="2"
  CornerRadius="2"
  Background="{x:Null}"
  BorderBrush="#404040"
  BorderThickness="1" />
                <Border 
  Grid.Column="0"
  CornerRadius="2,0,0,2" 
  Margin="1" 
  Background="{x:Null}" 
  BorderBrush="#404040"
  BorderThickness="0,0,1,0" />
                <Border Grid.Column="1" Background="Silver">
                    <Path 
  x:Name="Arrow"
  Grid.Column="1"     
  Fill="#404040"
  HorizontalAlignment="Center"
  VerticalAlignment="Center"
  Data="M 0 0 L 4 4 L 8 0 Z"/>
                </Border>

            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                    <Setter TargetName="Border" Property="Background" Value="#808080" />
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked" Value="true">
                    <Setter TargetName="Border" Property="Background" Value="#E0E0E0" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter TargetName="Border" Property="Background" Value="#EEEEEE" />
                    <Setter TargetName="Border" Property="BorderBrush" Value="#AAAAAA" />
                    <Setter Property="Foreground" Value="#888888"/>
                    <Setter TargetName="Arrow" Property="Fill" Value="#888888" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <!-- SimpleStyles: ComboBox -->
        <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
            <Border x:Name="PART_ContentHost" Focusable="False"  Background="{TemplateBinding Background}" />
        </ControlTemplate>

        <Style x:Key="{x:Type ComboBox}" TargetType="{x:Type ComboBox}">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="MinWidth" Value="120"/>
            <Setter Property="MinHeight" Value="20"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <Grid>
                            <ToggleButton 
        Name="ToggleButton" 
        Template="{StaticResource ComboBoxToggleButton}" 
        Grid.Column="2" 
        Focusable="false"
        IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
        ClickMode="Press">
                            </ToggleButton>
                            <ContentPresenter
        Name="ContentSite"
        IsHitTestVisible="False" 
        Content="{TemplateBinding SelectionBoxItem}"
        ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
        ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
        Margin="3,3,23,3"
        VerticalAlignment="Center"
        HorizontalAlignment="Left" />
                            <TextBox x:Name="PART_EditableTextBox"
        Style="{x:Null}" 
        Template="{StaticResource ComboBoxTextBox}" 
        HorizontalAlignment="Left" 
        VerticalAlignment="Center" 
        Margin="3,3,23,3"
        Focusable="True" 
        Background="Transparent"
        Visibility="Hidden"
        IsReadOnly="{TemplateBinding IsReadOnly}"/>
                            <Popup 
        Name="Popup"
        Placement="Bottom"
        IsOpen="{TemplateBinding IsDropDownOpen}"
        AllowsTransparency="True" 
        Focusable="False"
        PopupAnimation="Slide">
                                <Grid 
          Name="DropDown"
          SnapsToDevicePixels="True"                
          MinWidth="{TemplateBinding ActualWidth}"
          MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border 
            x:Name="DropDownBorder"
            Background="#FFFFFF"
            BorderThickness="1"
            BorderBrush="#888888"/>
                                    <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasItems" Value="false">
                                <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#888888"/>
                            </Trigger>
                            <Trigger Property="Popup.IsOpen" Value="true">
                                <Setter  Property="Background" Value="#555555"/>
                            </Trigger>
                            <Trigger Property="IsGrouping" Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                            </Trigger>
                            <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                                <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="4"/>
                                <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>
                            </Trigger>
                            <Trigger Property="IsEditable"
           Value="true">
                                <Setter Property="IsTabStop" Value="false"/>
                                <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
            </Style.Triggers>
        </Style>

        <!-- SimpleStyles: ComboBoxItem -->
        <Style x:Key="{x:Type ComboBoxItem}" TargetType="{x:Type ComboBoxItem}">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                        <Border 
      Name="Border"
      Padding="2"
      SnapsToDevicePixels="true">
                            <ContentPresenter />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsHighlighted" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="#888888"/>
                                <Setter  Property="Foreground" Value="Black"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#888888"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="true">
                                <Setter Property="Foreground" Value="#FF1D1D1D"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ControlTemplate x:Key="ButtonCloseTemplate" TargetType="{x:Type Button}">
            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsDefaulted" Value="True">
                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" TargetName="border" Value="#FFFF1D1D"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FFFF1D1D"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" TargetName="border" Value="#FFFF0202"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FFFF0202"/>
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked" Value="True">
                    <Setter Property="Background" TargetName="border" Value="#FFBCDDEE"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FF245A83"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" TargetName="border" Value="#FFF4F4F4"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FFADB2B5"/>
                    <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="#FF838383"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
    </Window.Resources>
    <Window.ContextMenu>
        <ContextMenu>
            <MenuItem/>
            <MenuItem/>
            <MenuItem/>
            <MenuItem/>
            <MenuItem/>
        </ContextMenu>
    </Window.ContextMenu>

    <ScrollViewer x:Name="LayoutRoot"
                    VerticalScrollBarVisibility="Auto"
                    CanContentScroll="True"
                    PanningMode="VerticalOnly"
                    Focusable="False"                      
                    Margin="0">
        <Grid x:Name="G1" >
            <Grid.RowDefinitions>
                <RowDefinition x:Name="R0" Height="auto"/>
                <RowDefinition x:Name="R1" Height="auto"/>
                <RowDefinition x:Name="R2" Height="auto"/>

            </Grid.RowDefinitions>
            <Grid Name="GBlur" Visibility="Hidden">
                <Grid.Effect>
                    <BlurEffect Radius="5" KernelType="Gaussian"/>
                </Grid.Effect>
            </Grid>
            <Grid x:Name="M1" Grid.Row="2">
                <Button  Click="Exclod_Click" Template="{DynamicResource ButtonCloseTemplate}" HorizontalAlignment="Right" Margin="0,0,0,0" VerticalAlignment="Top" Width="32" Height="32" Background="#08000000" BorderBrush="{x:Null}" Foreground="{DynamicResource WindowForeground}" RenderTransformOrigin="0.5,0.5">
                    <Viewbox >
                        <Grid Width="48" Height="48" Visibility="Visible">
                            <Path x:Name="Arrow1" Data="M0.085998535,0L16.112,11.464981 32,0.118011 32,8.3990061 16.115005,19.745 0,8.2079966 0,0.072997569z" Stretch="Uniform" Fill="{DynamicResource WindowForeground}" Width="26" Height="26" Margin="0,0,0,0" RenderTransformOrigin="0.5,0.5">
                                <Path.RenderTransform>
                                    <TransformGroup>
                                        <RotateTransform Angle="0" />
                                        <ScaleTransform ScaleX="1" ScaleY="1" />
                                    </TransformGroup>
                                </Path.RenderTransform>
                            </Path>
                        </Grid>
                    </Viewbox>
                </Button>
                <ComboBox  x:Name="cmbInterface" HorizontalAlignment="Left" Margin="18,10,0,0" VerticalAlignment="Top" Width="120" Foreground="{DynamicResource WindowForeground}" >
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding}" Foreground="{DynamicResource WindowForeground}"/>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>
                <!--<Button Name="ContextSee">
                    <Grid Name="backgroundGrid" Visibility="Collapsed" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}"  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" >
                        <Path x:Name="See" Data="M9.8010254,4.7550061C7.5220032,5.9089983 5.5870056,7.4539969 4.2440186,8.692004 6.6970215,10.949008 11.129028,14.271 15.996033,14.271 20.863037,14.271 25.30304,10.949008 27.747986,8.692004 26.413025,7.4539969 24.470032,5.9089983 22.197998,4.7550061 22.377991,5.2720044 22.475037,5.8119982 22.475037,6.3820055 22.475037,9.5010097 19.572998,12.02901 15.996033,12.02901 12.419006,12.02901 9.5240173,9.5010097 9.5240173,6.3820055 9.5240173,5.8119982 9.6220093,5.2720044 9.8010254,4.7550061z M15.996033,0C24.830017,1.9660001E-07 32,8.692004 32,8.692004 32,8.692004 24.830017,17.383 15.996033,17.383 7.1620178,17.383 0,8.692004 0,8.692004 0,8.692004 7.1620178,1.9660001E-07 15.996033,0z" Stretch="Uniform" Fill="{Binding BorderBrush, ElementName=ButtenView}" Width="20" Height="20" Margin="0,0,0,0" RenderTransformOrigin="0.5,0.5">
                            <Path.RenderTransform>
                                <TransformGroup>
                                    <TransformGroup.Children>
                                        <RotateTransform Angle="0" />
                                        <ScaleTransform ScaleX="1" ScaleY="1" />
                                    </TransformGroup.Children>
                                </TransformGroup>
                            </Path.RenderTransform>
                        </Path>
                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                </Button>-->
                <Grid x:Name="ButtenView" MouseEnter="ButtenView_MouseEnter" MouseLeave="ButtenView_MouseLeave" MouseLeftButtonDown="ButtenView_MouseLeftButtonDown"  Margin="139,9,0,165" HorizontalAlignment="Left" Width="24">
                    <Grid.Background>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#19000000" Offset="0"/>
                            <GradientStop Offset="1"/>
                        </LinearGradientBrush>
                    </Grid.Background>
                    <Grid x:Name="backgroundGrid" Width="24" Height="24" Visibility="Collapsed" />
                    <Path x:Name="See" Data="M9.8010254,4.7550061C7.5220032,5.9089983 5.5870056,7.4539969 4.2440186,8.692004 6.6970215,10.949008 11.129028,14.271 15.996033,14.271 20.863037,14.271 25.30304,10.949008 27.747986,8.692004 26.413025,7.4539969 24.470032,5.9089983 22.197998,4.7550061 22.377991,5.2720044 22.475037,5.8119982 22.475037,6.3820055 22.475037,9.5010097 19.572998,12.02901 15.996033,12.02901 12.419006,12.02901 9.5240173,9.5010097 9.5240173,6.3820055 9.5240173,5.8119982 9.6220093,5.2720044 9.8010254,4.7550061z M15.996033,0C24.830017,1.9660001E-07 32,8.692004 32,8.692004 32,8.692004 24.830017,17.383 15.996033,17.383 7.1620178,17.383 0,8.692004 0,8.692004 0,8.692004 7.1620178,1.9660001E-07 15.996033,0z" Stretch="Uniform" Fill="#FFFFFFFF" Width="20" Height="20" Margin="0,0,0,0" RenderTransformOrigin="0.5,0.5">
                        <Path.RenderTransform>
                            <TransformGroup>
                                <RotateTransform Angle="0" />
                                <ScaleTransform ScaleX="1" ScaleY="1" />
                            </TransformGroup>
                        </Path.RenderTransform>
                    </Path>
                </Grid>
                <Label Content="InterfaceType :" HorizontalAlignment="Left" Margin="14,37,0,0" VerticalAlignment="Top" Foreground="{DynamicResource WindowForeground}"/>
                <Label x:Name="lblInterfaceType" Content="-" HorizontalAlignment="Left" Margin="122,37,0,0" VerticalAlignment="Top" Foreground="{DynamicResource WindowForeground}"/>

                <Label x:Name="lblDownload" Content="0" HorizontalAlignment="Left" Margin="122,94,0,0" VerticalAlignment="Top" Foreground="{DynamicResource WindowForeground}"/>
                <Label Content="▲ Speed Upload :" HorizontalAlignment="Left" Margin="10,68,0,0" VerticalAlignment="Top" Foreground="#FFFB0303"/>

                <Label x:Name="labelIPAddress" Content="127.0.0.1" HorizontalAlignment="Left" Margin="101,120,0,0" VerticalAlignment="Top" Foreground="{DynamicResource WindowForeground}"/>
                <Label Content="▼ Speed Download :" HorizontalAlignment="Left" Margin="10,94,0,0" VerticalAlignment="Top" Foreground="#FF3AFF00" Background="{x:Null}"/>
                <Label x:Name="lblUpload" Content="0" HorizontalAlignment="Left" Margin="122,68,0,0" VerticalAlignment="Top" Foreground="{DynamicResource WindowForeground}"/>
                <Label Content="IPAddress :" HorizontalAlignment="Left" Margin="10,120,0,0" VerticalAlignment="Top" Foreground="{DynamicResource WindowForeground}"/>

                <Label Content="All Traffic Send" HorizontalAlignment="Left" Margin="10,146,0,0" VerticalAlignment="Top" Foreground="{DynamicResource WindowForeground}"/>
                <Label x:Name="lblBytesSent" Content="0" HorizontalAlignment="Left" Margin="122,146,0,0" VerticalAlignment="Top" Foreground="{DynamicResource WindowForeground}"/>

                <Label Content="All Traffic Received" HorizontalAlignment="Left" Margin="10,172,0,0" VerticalAlignment="Top" Foreground="{DynamicResource WindowForeground}"/>
                <Label x:Name="lblBytesReceived" Content="0" HorizontalAlignment="Left" Margin="122,172,0,0" VerticalAlignment="Top" Foreground="{DynamicResource WindowForeground}"/>

            </Grid>
            <Grid x:Name="M2" Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="auto"/>
                </Grid.ColumnDefinitions>

                <StackPanel Orientation="Horizontal">
                    <Label  Content="▲" Grid.Column="0" Foreground="#FFFB0303" Margin="5,0,0,0" />
                    <Label x:Name="MiniLabelU" Content="0" Margin="-5,0,0,0" Grid.Column="0" Foreground="White" />
                </StackPanel>
                <StackPanel Orientation="Horizontal" Grid.Column="1" >
                    <Label  Content="▼"  Background="{x:Null}" Foreground="#FF3AFF00" />
                    <Label x:Name="MiniLabelD" Content="0" Margin="-5,0,0,0" HorizontalAlignment="Left"  Background="{x:Null}" Foreground="White" />
                </StackPanel>
                <Button Grid.Column="2"  HorizontalAlignment="Right" Margin="0,0,0,0" VerticalAlignment="Top" Width="32" Height="32" Background="#02000000" BorderBrush="{x:Null}" Foreground="White" RenderTransformOrigin="0.5,0.5"/>
            </Grid>
            <Grid x:Name="M3" Grid.Row="0">
                <!--<Controls:ChartTraffic x:Name="Chart1" Height="100"/>-->
            </Grid>
            <Button Grid.Row="1" Click="Exclod_Click" HorizontalAlignment="Right" Margin="0,0,0,0" VerticalAlignment="Top" Width="32" Height="32" Background="#08000000" BorderBrush="{x:Null}" Foreground="{DynamicResource WindowForeground}" RenderTransformOrigin="0.5,0.5">
                <Viewbox >
                    <Grid Width="48" Height="48" Visibility="Visible">
                        <Path x:Name="Arrow2" Data="M16.261993,0L16.359985,0.065002445 16.454987,0 16.48999,0.15399169 32,11.294986 32,19.745 16.359985,8.5149861 0,19.745 0,11.294986 16.22699,0.15399169z" Stretch="Uniform" Fill="{DynamicResource WindowForeground}" Width="26" Height="26" Margin="0,0,0,0" RenderTransformOrigin="0.5,0.5">
                            <Path.RenderTransform>
                                <TransformGroup>
                                    <RotateTransform Angle="0" />
                                    <ScaleTransform ScaleX="1" ScaleY="1" />
                                </TransformGroup>
                            </Path.RenderTransform>
                        </Path>
                    </Grid>
                </Viewbox>
            </Button>
        </Grid>
    </ScrollViewer>
</Window>
